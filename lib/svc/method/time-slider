#!/bin/ksh
#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
#
# Copyright 2006 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#
# ident	"%Z%%M%	%I%	%E% SMI"

. /lib/svc/share/smf_include.sh


# Given the exit status of a command, an integer, 0 if the command completed
# without errors. If the command exited with errors we degrade the
# state of this service into maintenance mode. If a 3rd argument is presented
# we don't degrade the service. We also log an error message as passed into
# this function.
#
function check_failure { # integer exit status, error message, non-fatal flag

	typeset RESULT=$1
	typeset ERR_MSG=$2
	typeset NON_FATAL=$3

	if [ $RESULT -ne 0 ] ; then
	    print_log "Error: $ERR_MSG"
	    if [ -z "${NON_FATAL}" ] ; then
		print_log "Moving service $SMF_FMRI to maintenance mode."
	        svcadm mark maintenance $SMF_FMRI
	    fi
	fi

}


# A function we use to emit output. Right now, this goes to syslog via logger(1)
# as well as being echoed to stdout which will result in it being picked up by
# SMF if the $LOG variable is null.
#
function print_log { # message to display
	logger -t time-slider -p daemon.notice $*
	echo $*
}

# this function removes any left over cron jobs belonging to
# legacy zfs-auto-snapshot
#
function remove_legacy_cronjobs {

	crontab -l | grep -v "/lib/svc/method/zfs-auto-snapshot" \
	    > /tmp/saved-crontab.$$

	crontab /tmp/saved-crontab.$$
	check_failure $? "Unable to remove legacy zfs-auto-snaphot cron jobs" "NON_FATAL"

	rm /tmp/saved-crontab.$$

}

case "$1" in
'start')
	remove_legacy_cronjobs

	[ ! -x /usr/lib/time-sliderd ] && exit $SMF_EXIT_ERR_CONFIG

	/usr/lib/time-sliderd
	err=$?
	if [ $err -ne 0 ]; then
		echo "Time Slider failed to start: error $err"
		exit $SMF_EXIT_ERR_FATAL
	fi
	;;
*)
        echo "Usage: $0 { start }"
	exit $SMF_EXIT_ERR_FATAL 
        ;;
esac

exit $SMF_EXIT_OK
